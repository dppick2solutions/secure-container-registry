name: 'Run Terraform'

on:
  workflow_dispatch:
    inputs:
      whitelist_vault:
        description: 'Whitelist IP to KeyVault.'
        required: true
        default: 'false'

permissions: write-all
jobs:
  terraform:
    name: 'Run Terraform'
    env:
      ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
    environment: Azure
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.7.3

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v3
        with:
          tflint_version: v0.50.3

      - name: Init TFLint
        run: tflint --init
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: login
        uses: Azure/login@v1.5.0
        with:
          client-id: ${{ vars.ARM_CLIENT_ID }}
          tenant-id: ${{ vars.ARM_TENANT_ID }}
          subscription-id: ${{ vars.ARM_SUBSCRIPTION_ID }}

      - name: Whitelist GitHub Runner IP
        if: ${{ github.events.inputs.whitelist_vault == 'true' }}
        run: |
            agentIP=$(curl -s https://api.ipify.org/)
            az keyvault network-rule add --name pick2acrdemo --ip-address $agentIP
            sleep 60

      - name: TFLint
        run: tflint -f compact

      - name: Terraform Init
        env:
          ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
        run: terraform init -backend-config="config/backend.conf" 

      - name: Terraform Plan
        env:
          TF_VAR_client_id: ${{ vars.ARM_CLIENT_ID }}
          TF_VAR_subscription_id: ${{ vars.ARM_SUBSCRIPTION_ID }}
          TF_VAR_tenant_id: ${{ vars.ARM_TENANT_ID }}
          TF_VAR_local_ip: ${{ vars.LOCAL_IP }}
        run: terraform plan -no-color

      - name: Approve Terraform Plan
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.token }}
          approvers: dppick2solutions

      - name: Whitelist GitHub Runner IP
        id: whitelist
        if: ${{ github.events.inputs.whitelist_vault == 'true' }}
        run: |
            agentIP=$(curl -s https://api.ipify.org/)
            az keyvault network-rule add --name pick2acrdemo --ip-address $agentIP
            sleep 60

      - name: Terraform Apply
        env:
          TF_VAR_client_id: ${{ vars.ARM_CLIENT_ID }}
          TF_VAR_subscription_id: ${{ vars.ARM_SUBSCRIPTION_ID }}
          TF_VAR_tenant_id: ${{ vars.ARM_TENANT_ID }}
          TF_VAR_local_ip: ${{ vars.LOCAL_IP }}
        run: terraform apply -auto-approve 

      - name: Remove GitHub Runner IP from Whitelist
        if: steps.whitelist.conclusion == 'success'
        run: |
          agentIP=$(curl -s https://api.ipify.org/)
          az keyvault network-rule remove  --name pick2acrdemo --ip-address $agentIP

